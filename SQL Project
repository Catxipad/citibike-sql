-- Which stations do men use the most(2019)?
SELECT start_station_id, c2.name, COUNT(gender)
FROM citibike_2019 AS c1
JOIN citibike_stations AS c2
ON c2.id = c1.start_station_id
WHERE gender = 1
GROUP BY 1,2
ORDER BY 3 DESC;

-- Which stations do women use the most (2019)?
SELECT start_station_id, end_station_id, c2.name, COUNT(gender) AS total_female
FROM citibike_2019 AS c1
JOIN citibike_stations AS c2
ON c2.id = c1.start_station_id
WHERE gender = 2
GROUP BY 1,2,3
ORDER BY 4 DESC;

-- Total Ride Males vs Females
SELECT 
    CASE 
        WHEN EXTRACT(MONTH FROM start_time) = 1 THEN 'JANUARY'
        WHEN EXTRACT(MONTH FROM start_time) = 2 THEN 'FEBRUARY'
        WHEN EXTRACT(MONTH FROM start_time) = 3 THEN 'MARCH'
        WHEN EXTRACT(MONTH FROM start_time) = 4 THEN 'APRIL'
        WHEN EXTRACT(MONTH FROM start_time) = 5 THEN 'MAY'
        WHEN EXTRACT(MONTH FROM start_time) = 6 THEN 'JUNE'
        WHEN EXTRACT(MONTH FROM start_time) = 7 THEN 'JULY'
        WHEN EXTRACT(MONTH FROM start_time) = 8 THEN 'AUGUST'
        WHEN EXTRACT(MONTH FROM start_time) = 9 THEN 'SEPTEMBER'
        WHEN EXTRACT(MONTH FROM start_time) = 10 THEN 'OCTOBER'
        WHEN EXTRACT(MONTH FROM start_time) = 11 THEN 'NOVEMBER'
        WHEN EXTRACT(MONTH FROM start_time) = 12 THEN 'DECEMBER'
        ELSE 'OTHER'
		 END AS month 
	, SUM(gender)
	,CASE 
	WHEN gender = 1 THEN 'Male'
	WHEN gender = 2 THEN 'Female'
	Else 'Other' END AS gender
	,EXTRACT(YEAR FROM start_time)
FROM public.citibike_2019
WHERE gender = 1 OR gender = 2
GROUP BY 1, 3,4
ORDER BY gender

-- Monthly Trip Counts Male vs Female: subscribers
SELECT 
    CASE 
        WHEN EXTRACT(MONTH FROM start_time) = 1 THEN 'JANUARY'
        WHEN EXTRACT(MONTH FROM start_time) = 2 THEN 'FEBRUARY'
        WHEN EXTRACT(MONTH FROM start_time) = 3 THEN 'MARCH'
        WHEN EXTRACT(MONTH FROM start_time) = 4 THEN 'APRIL'
        WHEN EXTRACT(MONTH FROM start_time) = 5 THEN 'MAY'
        WHEN EXTRACT(MONTH FROM start_time) = 6 THEN 'JUNE'
        WHEN EXTRACT(MONTH FROM start_time) = 7 THEN 'JULY'
        WHEN EXTRACT(MONTH FROM start_time) = 8 THEN 'AUGUST'
        WHEN EXTRACT(MONTH FROM start_time) = 9 THEN 'SEPTEMBER'
        WHEN EXTRACT(MONTH FROM start_time) = 10 THEN 'OCTOBER'
        WHEN EXTRACT(MONTH FROM start_time) = 11 THEN 'NOVEMBER'
        WHEN EXTRACT(MONTH FROM start_time) = 12 THEN 'DECEMBER'
        ELSE 'OTHER'
		 END AS month 
	, SUM(gender)
	,CASE 
	WHEN gender = 1 THEN 'Male'
	WHEN gender = 2 THEN 'Female'
	Else 'Other' END AS gender
	,EXTRACT(YEAR FROM start_time)
FROM public.citibike_2019
WHERE gender = 1 OR gender = 2 AND user_type ilike '%subscriber%'
GROUP BY 1, 3,4
UNION
SELECT 
    CASE 
        WHEN EXTRACT(MONTH FROM start_time) = 1 THEN 'JANUARY'
        WHEN EXTRACT(MONTH FROM start_time) = 2 THEN 'FEBRUARY'
        WHEN EXTRACT(MONTH FROM start_time) = 3 THEN 'MARCH'
        WHEN EXTRACT(MONTH FROM start_time) = 4 THEN 'APRIL'
        WHEN EXTRACT(MONTH FROM start_time) = 5 THEN 'MAY'
        WHEN EXTRACT(MONTH FROM start_time) = 6 THEN 'JUNE'
        WHEN EXTRACT(MONTH FROM start_time) = 7 THEN 'JULY'
        WHEN EXTRACT(MONTH FROM start_time) = 8 THEN 'AUGUST'
        WHEN EXTRACT(MONTH FROM start_time) = 9 THEN 'SEPTEMBER'
        WHEN EXTRACT(MONTH FROM start_time) = 10 THEN 'OCTOBER'
        WHEN EXTRACT(MONTH FROM start_time) = 11 THEN 'NOVEMBER'
        WHEN EXTRACT(MONTH FROM start_time) = 12 THEN 'DECEMBER'
        ELSE 'OTHER'
		 END AS month 
	, SUM(gender)
	,CASE 
	WHEN gender = 1 THEN 'Male'
	WHEN gender = 2 THEN 'Female'
	Else 'Other' END AS gender
	,EXTRACT(YEAR FROM start_time)
FROM public.citibike_2018
WHERE gender = 1 OR gender = 2 AND user_type ilike '%subscriber%'
GROUP BY 1, 3,4
ORDER BY gender


SELECT 
    CASE 
        WHEN EXTRACT(MONTH FROM start_time) = 1 THEN 'JANUARY'
        WHEN EXTRACT(MONTH FROM start_time) = 2 THEN 'FEBRUARY'
        WHEN EXTRACT(MONTH FROM start_time) = 3 THEN 'MARCH'
        WHEN EXTRACT(MONTH FROM start_time) = 4 THEN 'APRIL'
        WHEN EXTRACT(MONTH FROM start_time) = 5 THEN 'MAY'
        WHEN EXTRACT(MONTH FROM start_time) = 6 THEN 'JUNE'
        WHEN EXTRACT(MONTH FROM start_time) = 7 THEN 'JULY'
        WHEN EXTRACT(MONTH FROM start_time) = 8 THEN 'AUGUST'
        WHEN EXTRACT(MONTH FROM start_time) = 9 THEN 'SEPTEMBER'
        WHEN EXTRACT(MONTH FROM start_time) = 10 THEN 'OCTOBER'
        WHEN EXTRACT(MONTH FROM start_time) = 11 THEN 'NOVEMBER'
        WHEN EXTRACT(MONTH FROM start_time) = 12 THEN 'DECEMBER'
        ELSE 'OTHER'
		 END AS month 
	, SUM(gender)
	,CASE 
	WHEN gender = 1 THEN 'Male'
	WHEN gender = 2 THEN 'Female'
	Else 'Other' END AS gender
	,EXTRACT(YEAR FROM start_time)
	,user_type
FROM public.citibike_2019
WHERE gender = 1 OR gender = 2 AND user_type IN('Customer', 'Subscriber')
GROUP BY 1, 3,4,5
UNION
SELECT 
    CASE 
        WHEN EXTRACT(MONTH FROM start_time) = 1 THEN 'JANUARY'
        WHEN EXTRACT(MONTH FROM start_time) = 2 THEN 'FEBRUARY'
        WHEN EXTRACT(MONTH FROM start_time) = 3 THEN 'MARCH'
        WHEN EXTRACT(MONTH FROM start_time) = 4 THEN 'APRIL'
        WHEN EXTRACT(MONTH FROM start_time) = 5 THEN 'MAY'
        WHEN EXTRACT(MONTH FROM start_time) = 6 THEN 'JUNE'
        WHEN EXTRACT(MONTH FROM start_time) = 7 THEN 'JULY'
        WHEN EXTRACT(MONTH FROM start_time) = 8 THEN 'AUGUST'
        WHEN EXTRACT(MONTH FROM start_time) = 9 THEN 'SEPTEMBER'
        WHEN EXTRACT(MONTH FROM start_time) = 10 THEN 'OCTOBER'
        WHEN EXTRACT(MONTH FROM start_time) = 11 THEN 'NOVEMBER'
        WHEN EXTRACT(MONTH FROM start_time) = 12 THEN 'DECEMBER'
        ELSE 'OTHER'
		 END AS month 
	, SUM(gender)
	,CASE 
	WHEN gender = 1 THEN 'Male'
	WHEN gender = 2 THEN 'Female'
	Else 'Other' END AS gender
	,EXTRACT(YEAR FROM start_time)
	,user_type
FROM public.citibike_2018
WHERE gender = 1 OR gender = 2 AND user_type IN('Customer', 'Subscriber')
GROUP BY 1, 3,4,5
ORDER BY gender

SELECT distinct user_type
FROM public.citibike_2019
-- Percentage of women that ride per month
SELECT 
    CASE 
        WHEN EXTRACT(MONTH FROM start_time) = 1 THEN 'JANUARY'
        WHEN EXTRACT(MONTH FROM start_time) = 2 THEN 'FEBRUARY'
        WHEN EXTRACT(MONTH FROM start_time) = 3 THEN 'MARCH'
        WHEN EXTRACT(MONTH FROM start_time) = 4 THEN 'APRIL'
        WHEN EXTRACT(MONTH FROM start_time) = 5 THEN 'MAY'
        WHEN EXTRACT(MONTH FROM start_time) = 6 THEN 'JUNE'
        WHEN EXTRACT(MONTH FROM start_time) = 7 THEN 'JULY'
        WHEN EXTRACT(MONTH FROM start_time) = 8 THEN 'AUGUST'
        WHEN EXTRACT(MONTH FROM start_time) = 9 THEN 'SEPTEMBER'
        WHEN EXTRACT(MONTH FROM start_time) = 10 THEN 'OCTOBER'
        WHEN EXTRACT(MONTH FROM start_time) = 11 THEN 'NOVEMBER'
        WHEN EXTRACT(MONTH FROM start_time) = 12 THEN 'DECEMBER'
        ELSE 'OTHER'
		 END AS month 
	, SUM(gender) AS "women", user_type
	,EXTRACT(YEAR FROM start_time)
-- 	, (SELECT COUNT(gender) FROM public.citibike_2019 WHERE gender =2) /COUNT(gender)  AS women_percent 
-- 	,to_char((count(gender) * 100.0
--                           / sum(count(gender)) OVER ()), 'FM990.00" %"') AS percent
,ROUND(COUNT(gender)/SUM(COUNT(gender)) OVER() *100 ,2)
FROM public.citibike_2019
WHERE gender = 2 
GROUP BY month, user_type, EXTRACT(YEAR FROM start_time)
UNION
SELECT 
    CASE 
        WHEN EXTRACT(MONTH FROM start_time) = 1 THEN 'JANUARY'
        WHEN EXTRACT(MONTH FROM start_time) = 2 THEN 'FEBRUARY'
        WHEN EXTRACT(MONTH FROM start_time) = 3 THEN 'MARCH'
        WHEN EXTRACT(MONTH FROM start_time) = 4 THEN 'APRIL'
        WHEN EXTRACT(MONTH FROM start_time) = 5 THEN 'MAY'
        WHEN EXTRACT(MONTH FROM start_time) = 6 THEN 'JUNE'
        WHEN EXTRACT(MONTH FROM start_time) = 7 THEN 'JULY'
        WHEN EXTRACT(MONTH FROM start_time) = 8 THEN 'AUGUST'
        WHEN EXTRACT(MONTH FROM start_time) = 9 THEN 'SEPTEMBER'
        WHEN EXTRACT(MONTH FROM start_time) = 10 THEN 'OCTOBER'
        WHEN EXTRACT(MONTH FROM start_time) = 11 THEN 'NOVEMBER'
        WHEN EXTRACT(MONTH FROM start_time) = 12 THEN 'DECEMBER'
        ELSE 'OTHER'
		 END AS month 
	, SUM(gender) AS "women", user_type
	,EXTRACT(YEAR FROM start_time)
-- 	, (SELECT COUNT(gender) FROM public.citibike_2019 WHERE gender =2) /COUNT(gender)  AS women_percent 
-- 	,to_char((count(gender) * 100.0
--                           / sum(count(gender)) OVER ()), 'FM990.00" %"') AS percent
,ROUND(COUNT(gender)/SUM(COUNT(gender)) OVER() *100 ,2)
FROM public.citibike_2018
WHERE gender = 2 
GROUP BY month, user_type, EXTRACT(YEAR FROM start_time)
order by user_type

-- Percentage of MEN that ride per month
SELECT 
    CASE 
        WHEN EXTRACT(MONTH FROM start_time) = 1 THEN 'JANUARY'
        WHEN EXTRACT(MONTH FROM start_time) = 2 THEN 'FEBRUARY'
        WHEN EXTRACT(MONTH FROM start_time) = 3 THEN 'MARCH'
        WHEN EXTRACT(MONTH FROM start_time) = 4 THEN 'APRIL'
        WHEN EXTRACT(MONTH FROM start_time) = 5 THEN 'MAY'
        WHEN EXTRACT(MONTH FROM start_time) = 6 THEN 'JUNE'
        WHEN EXTRACT(MONTH FROM start_time) = 7 THEN 'JULY'
        WHEN EXTRACT(MONTH FROM start_time) = 8 THEN 'AUGUST'
        WHEN EXTRACT(MONTH FROM start_time) = 9 THEN 'SEPTEMBER'
        WHEN EXTRACT(MONTH FROM start_time) = 10 THEN 'OCTOBER'
        WHEN EXTRACT(MONTH FROM start_time) = 11 THEN 'NOVEMBER'
        WHEN EXTRACT(MONTH FROM start_time) = 12 THEN 'DECEMBER'
        ELSE 'OTHER'
		 END AS month 
	, SUM(gender) AS "women", user_type
-- 	, (SELECT COUNT(gender) FROM public.citibike_2019 WHERE gender =2) /COUNT(gender)  AS women_percent 
-- 	,to_char((count(gender) * 100.0
--                           / sum(count(gender)) OVER ()), 'FM990.00" %"') AS percent
,ROUND(COUNT(gender)/SUM(COUNT(gender)) OVER() *100 ,2)
FROM public.citibike_2019
WHERE gender = 1 
GROUP BY month, user_type
order by user_type

-- Test for bike_id's
SELECT COUNT(*)
FROM
(
	SELECT DISTINCT bike_id
FROM public.citibike_2016
UNION 
SELECT DISTINCT bike_id
FROM public.citibike_2017
UNION 
SELECT DISTINCT bike_id
FROM public.citibike_2018
UNION
SELECT DISTINCT bike_id
FROM public.citibike_2019) AS total_bikes


SELECT
  CAST(start_time AS date) AS date,
  COUNT(*) AS num_trips,
  round(SUM(tripduration/60),2) AS total_duration_minutes,
  COUNT(DISTINCT bikeid) AS num_bikes
FROM
  `bigquery-public-data.new_york.citibike_trips`
GROUP BY
  date
ORDER BY
  date ASC
  
--   How many trips start at a certain station by gender?
SELECT id,name,COUNT(start_station_id) AS number_of_rides_starting_at_station
FROM    
 (SELECT start_station_id, COUNT(*) number_of_rides
   FROM public.citibike_2019
   GROUP BY start_station_id)
    AS station_num_trips
INNER JOIN public.citibike_stations 
ON public.citibike_stations.id = public.citibike_2019.bike_id
-- ORDER BY number_of_rides DESC 

-- Subscriber type and gender type's most 
SELECT id,name
FROM public.citibike_stations
WHERE id IN 
(SELECT start_station_id
 FROM public.citibike_2019
 WHERE user_type = 'Subscriber' AND gender = 2)
	   
	   
--Rider count by month
SELECT TO_CHAR(start_time::date, 'Month') AS month,COUNT(*) as total_riders
FROM citibike_2019
GROUP BY 1
UNION
SELECT TO_CHAR(start_time::date, 'Month') AS month, COUNT(*) as total_riders
FROM citibike_2018
GROUP BY 1
ORDER BY 2 DESC;


--How many riders in September 2018???
SELECT user_type,
	COUNT(user_type) AS num_users
	,CASE 
	WHEN gender = 1 THEN 'Male'
	WHEN gender = 2 THEN 'Female'
	Else 'Other' END AS gender
FROM citibike_2018
GROUP BY 1,3
UNION
SELECT user_type,
	COUNT(user_type) AS num_users
	,CASE 
	WHEN gender = 1 THEN 'Male'
	WHEN gender = 2 THEN 'Female'
	Else 'Other' END AS gender
FROM citibike_2019
GROUP BY 1,3;

-- Popular stations to start rides
SELECT c2.name, start_station_id, COUNT(start_station_id) AS trip_counts
FROM public.citibike_2019 c1
LEFT JOIN citibike_stations c2
ON c1.start_station_id = c2.id
GROUP BY 1,2
ORDER BY trip_counts DESC;

-- Popular stations to end rides
SELECT c2.name, end_station_id, COUNT(end_station_id) AS trip_counts
	,CASE 
	WHEN gender = 1 THEN 'Male'
	WHEN gender = 2 THEN 'Female'
	Else 'Other' END AS gender
FROM public.citibike_2019 c1
LEFT JOIN citibike_stations c2
ON c1.start_station_id = c2.id
GROUP BY 1,2,4
ORDER BY gender, trip_counts DESC;

-- Complete popular trip routes
SELECT c2.name, start_station_id, end_station_id, COUNT(*) AS trip_counts
,CASE 
	WHEN gender = 1 THEN 'Male'
	WHEN gender = 2 THEN 'Female'
	Else 'Other' END AS gender
FROM public.citibike_2019 c1
LEFT JOIN citibike_stations c2
ON c1.start_station_id = c2.id
GROUP BY 1,2,3,5
ORDER BY gender, trip_counts DESC

SELECT name
FROM public.citibike_stations
WHERE id = 3183


-- Considerations: Make bikes family friendly like child seats, larger baskets for grocer