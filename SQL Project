-- Which stations do men use the most(2019)?
SELECT start_station_id, c2.name, COUNT(gender)
FROM citibike_2019 AS c1
JOIN citibike_stations AS c2
ON c2.id = c1.start_station_id
WHERE gender = 1
GROUP BY 1,2
ORDER BY 3 DESC;

-- Which stations do women use the most (2019)?
SELECT start_station_id, end_station_id, c2.name, COUNT(gender) AS total_female
FROM citibike_2019 AS c1
JOIN citibike_stations AS c2
ON c2.id = c1.start_station_id
WHERE gender = 2
GROUP BY 1,2,3
ORDER BY 4 DESC;

-- Total Ride Males vs Females
SELECT 
    TO_CHAR(start_time, 'Month') AS month_name,
    CASE 
        WHEN gender = 1 THEN 'Male'
        WHEN gender = 2 THEN 'Female'
        ELSE 'Other'
    END AS gender,
    EXTRACT(YEAR FROM start_time) AS year,
    COUNT(*) AS gender_count
FROM public.citibike_2019
WHERE gender IN (1, 2)
GROUP BY month_name, gender, year
ORDER BY gender, month_name, year;

-- Monthly Trip Counts Male vs Female: subscribers
WITH combined_data AS (
    SELECT * FROM public.citibike_2019
    UNION ALL
    SELECT * FROM public.citibike_2018
)

SELECT 
    TO_CHAR(start_time, 'Month') AS month_name,
    COUNT(*) AS gender_count,
    CASE 
        WHEN gender = 1 THEN 'Male'
        WHEN gender = 2 THEN 'Female'
        ELSE 'Other'
    END AS gender,
    EXTRACT(YEAR FROM start_time) AS year
FROM combined_data
WHERE (gender = 1 OR gender = 2) AND user_type ILIKE '%subscriber%'
GROUP BY month_name, gender, year
ORDER BY gender, month_name, year;


-- Percentage of women that ride per month
WITH combined_data AS (
    SELECT * FROM public.citibike_2019
    UNION ALL
    SELECT * FROM public.citibike_2018
)

SELECT 
    TO_CHAR(start_time, 'Month') AS month_name,
    COUNT(gender) AS women,
    user_type,
    EXTRACT(YEAR FROM start_time) AS year,
    ROUND(COUNT(gender) * 100.0 / SUM(COUNT(gender)) OVER(), 2) AS women_percent
FROM combined_data
WHERE gender = 2
GROUP BY month_name, user_type, year
ORDER BY user_type, month_name, year;


-- Percentage of MEN that ride per month
SELECT 
    TO_CHAR(start_time, 'Month') AS month_name,
    COUNT(gender) AS men,
    user_type,
    ROUND(COUNT(gender) * 100.0 / SUM(COUNT(gender)) OVER(), 2) AS men_percent
FROM public.citibike_2019
WHERE gender = 1
GROUP BY month_name, user_type
ORDER BY user_type, month_name;

-- Test for bike_id's
SELECT COUNT(*)
FROM
(
	SELECT DISTINCT bike_id
FROM public.citibike_2016
UNION 
SELECT DISTINCT bike_id
FROM public.citibike_2017
UNION 
SELECT DISTINCT bike_id
FROM public.citibike_2018
UNION
SELECT DISTINCT bike_id
FROM public.citibike_2019) AS total_bikes


SELECT
  CAST(start_time AS date) AS date,
  COUNT(*) AS num_trips,
  round(SUM(tripduration/60),2) AS total_duration_minutes,
  COUNT(DISTINCT bikeid) AS num_bikes
FROM
  `bigquery-public-data.new_york.citibike_trips`
GROUP BY
  date
ORDER BY
  date ASC
  
--   How many trips start at a certain station by gender?
SELECT id,name,COUNT(start_station_id) AS number_of_rides_starting_at_station
FROM    
 (SELECT start_station_id, COUNT(*) number_of_rides
   FROM public.citibike_2019
   GROUP BY start_station_id)
    AS station_num_trips
INNER JOIN public.citibike_stations 
ON public.citibike_stations.id = public.citibike_2019.bike_id
-- ORDER BY number_of_rides DESC 

-- Subscriber type and gender type's most 
SELECT id,name
FROM public.citibike_stations
WHERE id IN 
(SELECT start_station_id
 FROM public.citibike_2019
 WHERE user_type = 'Subscriber' AND gender = 2)
	   
	   
--Rider count by month
SELECT TO_CHAR(start_time::date, 'Month') AS month,COUNT(*) as total_riders
FROM citibike_2019
GROUP BY 1
UNION
SELECT TO_CHAR(start_time::date, 'Month') AS month, COUNT(*) as total_riders
FROM citibike_2018
GROUP BY 1
ORDER BY 2 DESC;


--How many riders in September 2018???
SELECT user_type,
	COUNT(user_type) AS num_users
	,CASE 
	WHEN gender = 1 THEN 'Male'
	WHEN gender = 2 THEN 'Female'
	Else 'Other' END AS gender
FROM citibike_2018
GROUP BY 1,3
UNION
SELECT user_type,
	COUNT(user_type) AS num_users
	,CASE 
	WHEN gender = 1 THEN 'Male'
	WHEN gender = 2 THEN 'Female'
	Else 'Other' END AS gender
FROM citibike_2019
GROUP BY 1,3;

-- Popular stations to start rides
SELECT c2.name, start_station_id, COUNT(start_station_id) AS trip_counts
FROM public.citibike_2019 c1
LEFT JOIN citibike_stations c2
ON c1.start_station_id = c2.id
GROUP BY 1,2
ORDER BY trip_counts DESC;

-- Popular stations to end rides
SELECT c2.name, end_station_id, COUNT(end_station_id) AS trip_counts
	,CASE 
	WHEN gender = 1 THEN 'Male'
	WHEN gender = 2 THEN 'Female'
	Else 'Other' END AS gender
FROM public.citibike_2019 c1
LEFT JOIN citibike_stations c2
ON c1.start_station_id = c2.id
GROUP BY 1,2,4
ORDER BY gender, trip_counts DESC;

-- Complete popular trip routes
SELECT c2.name, start_station_id, end_station_id, COUNT(*) AS trip_counts
,CASE 
	WHEN gender = 1 THEN 'Male'
	WHEN gender = 2 THEN 'Female'
	Else 'Other' END AS gender
FROM public.citibike_2019 c1
LEFT JOIN citibike_stations c2
ON c1.start_station_id = c2.id
GROUP BY 1,2,3,5
ORDER BY gender, trip_counts DESC

SELECT name
FROM public.citibike_stations
WHERE id = 3183


-- Considerations: Make bikes family friendly like child seats, larger baskets for grocer
